/* Copyright 2015, 2016 Gerald Baier
 *
 * This file is part of despeckCL.
 *
 * despeckCL is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * despeckCL is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with despeckCL. If not, see <http://www.gnu.org/licenses/>.
 */

#ifndef TRANSPOSE_H
#define TRANSPOSE_H

#include "clcfg.h"

namespace nlinsar {

    class transpose : public kernel_env_single<transpose>
    {
        public:
            static constexpr const char* routine_name {"transpose"};
            static constexpr const char* kernel_source {"@CMAKE_KERNEL_SOURCE@"};

            const size_t thread_size_row;
            const size_t thread_size_col;

            transpose(const size_t block_size,
                      cl::Context context,
                      const size_t thread_size_row,
                      const size_t thread_size_col);

            transpose(const transpose& other);

            std::string build_opts(void);

            void run(cl::CommandQueue cmd_queue,
                    cl::Buffer matrix,
                    const int height,
                    const int width);
    };

}
#endif
