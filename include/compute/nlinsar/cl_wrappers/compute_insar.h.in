/* Copyright 2015, 2016 Gerald Baier
 *
 * This file is part of despeckCL.
 *
 * despeckCL is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * despeckCL is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with despeckCL. If not, see <http://www.gnu.org/licenses/>.
 */

#ifndef COMPUTE_INSAR_H
#define COMPUTE_INSAR_H

#include <CL/cl.h>

#include "clcfg.h"

namespace nlinsar {

    class compute_insar : public kernel_env_single<compute_insar>
    {
        private:
            const int search_window_size;

        public:
            std::string build_opts();

            static constexpr const char* routine_name {"compute_insar"};
            static constexpr const char* kernel_source {"@CMAKE_KERNEL_SOURCE@"};


            compute_insar(const size_t block_size,
                          cl::Context context,
                          const int search_window_size);

            compute_insar(const compute_insar& other);

            void run(cl::CommandQueue cmd_queue,
                     cl::Buffer device_filter_values_a,
                     cl::Buffer device_filter_values_x_real,
                     cl::Buffer device_filter_values_x_imag,
                     cl::Buffer device_amp_filt,
                     cl::Buffer device_phi_filt,
                     cl::Buffer device_coh_filt,
                     const int height_overlap,
                     const int width_overlap,
                     cl::Buffer device_weights,
                     const int search_window_size,
                     const int patch_size);
    };

}
#endif
